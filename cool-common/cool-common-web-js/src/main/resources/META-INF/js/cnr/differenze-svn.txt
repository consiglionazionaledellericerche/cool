Index: cnr.bulkinfo.js
===================================================================
--- cnr.bulkinfo.js	(revision 5716)
+++ cnr.bulkinfo.js	(working copy)
@@ -1,4 +1,5 @@
-define(['cnr/cnr.ui.widgets', 'jquery', 'cnr/cnr', 'cnr/cnr.style', 'handlebars', 'i18n', 'cnr/cnr.ui', 'cnr/cnr.ui.priority', 'cnr/cnr.ui.duedate', 'cnr/cnr.validator', 'cnr/cnr.url', 'json!common', 'datepicker-i18n', 'datetimepicker-i18n'], function (Widgets, $, CNR, Style, Handlebars, i18n, UI, Priority, DueDate, Validator, URL, common) {
+define([
+  'cnr/cnr.ui.widgets', 'cnr/cnr', 'cnr/cnr.style', 'handlebars', 'i18n', 'cnr/cnr.ui', 'cnr/cnr.ui.priority', 'cnr/cnr.ui.duedate', 'cnr/cnr.validator', 'cnr/cnr.url', 'json!common', 'datepicker-i18n', 'datetimepicker-i18n'], function (Widgets, CNR, Style, Handlebars, i18n, UI, Priority, DueDate, Validator, URL, common) {
   "use strict";
 
   /**
@@ -176,7 +177,7 @@
       }
 
       // E' stato aggiunto nella versione 3, e per adesso funziona solo con la 3
-      if ((item.visible === "false" || item.visible === false) && options.version === 3) {
+      if (item.visible === "false" || item.visible === false) {
         obj.css("display", "none");
       }
 
Index: cnr.js
===================================================================
--- cnr.js	(revision 5716)
+++ cnr.js	(working copy)
@@ -1,6 +1,6 @@
 /* CNR main object, implements Revealing Module Pattern */
 
-define(['jquery', 'cnr/cnr.url', 'moment', 'json!cache', 'moment-i18n'], function ($, URL, moment, cache) {
+define(['cnr/cnr.url', 'moment', 'json!cache', 'moment-i18n'], function (URL, moment, cache) {
   "use strict";
   /* utility functions */
 
Index: cnr.style.js
===================================================================
--- cnr.style.js	(revision 5716)
+++ cnr.style.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'json!common'], function ($, common) {
+define(['json!common'], function (common) {
   "use strict";
 
   return function (v) {
Index: cnr.tree.js
===================================================================
--- cnr.tree.js	(revision 5716)
+++ cnr.tree.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', "cnr/cnr", 'jstree', 'cnr/cnr.url', 'json!common'], function ($, CNR, jstree, URL, common) {
+define(["cnr/cnr", 'jstree', 'cnr/cnr.url', 'json!common'], function (CNR, jstree, URL, common) {
   // Folders tree
   "use strict";
 
Index: cnr.ui.authority.js
===================================================================
--- cnr.ui.authority.js	(revision 5716)
+++ cnr.ui.authority.js	(working copy)
@@ -1,5 +1,5 @@
 /* javascript closure providing all the authority functionalities */
-define(['jquery', 'cnr/cnr.url'], function ($, URL) {
+define(['cnr/cnr.url'], function (URL) {
   "use strict";
 
   var minLength = 3, maxItems = 10;
@@ -49,6 +49,7 @@
   }
 
   function validateAssignee(assigneeType, query, controlGroup) {
+    query = query.replace(/\(.*\)/g, '').trim();
     getAssignee(assigneeType, query, function (data) {
       var errorClass = "error", successClass = "success", isValid = data.indexOf(query) >= 0;
       if (isValid) {
@@ -67,6 +68,7 @@
     if (type) {
       type.find("button").on("click", function () {
         var query = input.val();
+        console.log(query);
         validateAssignee($(this).data("type"), query, controlGroup);
       });
     }
@@ -78,16 +80,29 @@
       })
       .on("keyup change", function () {
         var query = input.val();
+        console.log(query);
         validateAssignee(type ? type.find(".active").data("type") : defaultType, query, controlGroup);
       })
       .typeahead({
+        minLength: 3,
+        hint: true,
+        highlight: true
+      }, {
         updater: function (item) {
           return item.replace(/\(.*\)/g, '').trim();
         },
+        name: 'authority',
         source: function (query, process) {
+          console.log(arguments);
           var assigneeType = type ? type.find(".active").data("type") : defaultType;
           getAssignee(assigneeType, query, function (map) {
-            process(map);
+            //process([{value: "fracesco.uliana"}, {value: "francesco.totti"}]);
+            var xx = $.map(map, function (el) {
+              return {
+                value: el
+              };
+            })
+            process(xx);
           });
         },
         items: maxItems
@@ -100,10 +115,10 @@
 
     var assigneeType,
       value = bulkItem.val || bulkItem['default'],
-      assignee = $('<input type="text" autocomplete="off" data-provide="typeahead" />').addClass((bulkItem || {})['class'] || 'input-medium').attr('id', id).attr('name', id).val(value),
+      assignee = $('<input type="text" class="form-control" data-provide="typeahead" />').addClass((bulkItem || {})['class'] || 'input-medium').attr('id', id).attr('name', id).val(value),
       controls = $('<div class="controls"></div>').append(assignee).append(' '),
       label = $('<label class="control-label"></label>').attr('for', id).text(labelText || ''),
-      item = $('<div class="control-group authority widget"></div>'),
+      item = $('<div class="form-group authority widget"></div>'),
       buttonUsers = $('<button type="button" class="btn btn-mini" data-type="users">Utenti</button>'),
       buttonGroups = $('<button type="button" class="btn btn-mini" data-type="groups">Gruppi</button>'),
       settings = bulkItem.jsonsettings || {};
Index: cnr.ui.checkbox.js
===================================================================
--- cnr.ui.checkbox.js	(revision 5716)
+++ cnr.ui.checkbox.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery'], function ($) {
+define([], function () {
   "use strict";
 
   function widget(id, labelText, item) {
@@ -5,11 +5,11 @@
 
     var controls = $('<div class="controls"></div>'),
       label = $('<label/>').attr("class", item.labelClass || "control-label").append(labelText),
-      parent = $('<div class="control-group widget"></div>').append(label).append(controls),
+      parent = $('<div class="form-group widget"></div>').append(label).append(controls),
       isChecked = item.val || false,
       options = {
         y: {
-          label: '<i class="icon-ok icon-white"></i>'
+          label: '<i class="glyphicon glyphicon-ok"></i>'
         },
         n: {
           label: 'NO'
@@ -22,7 +22,7 @@
 
       var customClass = 'btn-success',
         selectedItem = options[on ? 'y' : 'n'].item,
-        wid = $('.' + item.name + '_true').parents('.control-group');
+        wid = $('.' + item.name + '_true').parents('.form-group');
 
       myWidget
         .removeClass("on off")
@@ -43,7 +43,7 @@
     // create the two buttons (on / off)
     $.each(options, function (key, value) {
 
-      var btn = $('<button type="button" data-value="' + key + '" class="btn">' + value.label + '</button>')
+      var btn = $('<button type="button" data-value="' + key + '" class="btn btn-default">' + value.label + '</button>')
         .addClass('cnr-checkbox-' + key)
         .click(function () {
           changeStatus(key === 'y');
Index: cnr.ui.city.js
===================================================================
--- cnr.ui.city.js	(revision 5716)
+++ cnr.ui.city.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'cnr/cnr.url'], function ($, URL) {
+define(['cnr/cnr.url'], function (URL) {
   "use strict";
 
   var maxItems = 12;
Index: cnr.ui.country.js
===================================================================
--- cnr.ui.country.js	(revision 5716)
+++ cnr.ui.country.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'cnr/cnr.url'], function ($, URL) {
+define(['cnr/cnr.url'], function (URL) {
   "use strict";
 
   var maxItems = 12;
Index: cnr.ui.datepicker.js
===================================================================
--- cnr.ui.datepicker.js	(revision 5716)
+++ cnr.ui.datepicker.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'i18n', 'moment', 'datepicker-i18n'], function ($, i18n, moment) {
+define(['moment', 'datepicker-i18n'], function (moment) {
   "use strict";
 
   function widget(id, labelText, item, label) {
Index: cnr.ui.datetimepicker.js
===================================================================
--- cnr.ui.datetimepicker.js	(revision 5716)
+++ cnr.ui.datetimepicker.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'i18n', 'moment', 'datetimepicker-i18n'], function ($, i18n, moment, datetimepicker) {
+define(['i18n', 'moment', 'datetimepicker-i18n'], function (i18n, moment, datetimepicker) {
   "use strict";
 
   function widget(id, labelText, item) {
Index: cnr.ui.duedate.js
===================================================================
--- cnr.ui.duedate.js	(revision 5716)
+++ cnr.ui.duedate.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'cnr/cnr'], function ($, CNR) {
+define(['cnr/cnr'], function (CNR) {
 	"use strict";
 	return {
 		Widget: function (id, labelText, value) {
Index: cnr.ui.group.js
===================================================================
--- cnr.ui.group.js	(revision 5716)
+++ cnr.ui.group.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'json!common', 'i18n', 'cnr/cnr.url'], function ($, common, i18n, URL) {
+define(['json!common', 'i18n', 'cnr/cnr.url'], function (common, i18n, URL) {
   /* javascript closure providing all the group functionalities */
   "use strict";
 
@@ -5,18 +5,18 @@
   /* public methods */
   function widget(id, labelText, onSelect) {
     var btn = $('<div class="btn-group"></div>'),
-      a = $('<a class="btn btn-mini dropdown-toggle" data-toggle="dropdown" href="#"></a>').appendTo(btn),
+      a = $('<button class="btn btn-default dropdown-toggle" data-toggle="dropdown"></button>').appendTo(btn),
       ul = $('<ul class="dropdown-menu"></ul>').appendTo(btn),
       label = $('<label class="control-label">' + (labelText || '') + '</label>').attr('for', id),
       empty = {displayName: i18n.prop('label.empty.group.name', 'nessuno')},
       controls = $('<div class="controls"></div>'),
-      item = $('<div class="control-group widget"></div>');
+      item = $('<div class="form-group widget"></div>');
 
     function select(btn, el, init) {
       btn
         .data('name', el.displayName)
         .data('id', el.fullName)
-        .children('a')
+        .children('button')
         .text(i18n.prop(el.fullName, el.displayName))
         .append('<span class="caret"></span>');
       item.data('value', el.fullName || null);
Index: cnr.ui.js
===================================================================
--- cnr.ui.js	(revision 5716)
+++ cnr.ui.js	(working copy)
@@ -1,5 +1,5 @@
 // reusable user interface components
-define(['jquery', 'bootstrap'], function ($) {
+define([], function () {
   "use strict";
 
   function modal(title, content, callback, callbackClose, isBigModal) {
Index: cnr.ui.priority.js
===================================================================
--- cnr.ui.priority.js	(revision 5716)
+++ cnr.ui.priority.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery'], function ($) {
+define([], function () {
 	"use strict";
 	return {
 		Widget: function (id, labelText, priority) {
Index: cnr.ui.radio.js
===================================================================
--- cnr.ui.radio.js	(revision 5716)
+++ cnr.ui.radio.js	(working copy)
@@ -1,20 +1,18 @@
-define(['jquery', 'i18n'], function ($, i18n) {
+define(['i18n'], function (i18n) {
   "use strict";
 
   function widget(id, labelText, item, label) {
 
     var controls = $('<div class="controls"></div>'),
-//      label = $('<label/>').attr("class", item.labelClass || "control-label").append(labelText),
-//      parent = $('<div class="control-group widget"></div>').append(label).append(controls),
-      parent = $('<div class="control-group widget"></div>').addClass(item.parentGroupClass)
+      parent = $('<div class="form-group widget"></div>').addClass(item.parentGroupClass)
         .append(labelText ? label : null)
         .append(controls),
-      input = $('<div class="btn-group radio-tick" data-toggle="buttons-radio"></div>').attr('id', id).appendTo(controls);
+      input = $('<div class="btn-group" data-toggle="buttons"></div>').attr('id', id).appendTo(controls);
 
     if (item.jsonlist) {
       $.each(item.jsonlist, function (index, fieldvalue) {
         var btn = $('<button type="button" data-value="' + fieldvalue.key +
-          '" data-id="' + fieldvalue.id + '" class="btn" >' +
+          '" data-id="' + fieldvalue.id + '" class="btn btn-default" >' +
           i18n.prop(fieldvalue.label, fieldvalue.defaultLabel) +
           '</button>').appendTo(input);
         if (item['class']) {
@@ -33,9 +31,9 @@
         parsedValue = value ? String(value).match(/[a-zA-Z0-9-_]+/, '') : value;
       parent.data('value', value);
       if (parsedValue !== undefined) {
-        $('[class*="' + id + '"]').parents('.control-group').hide();
-        $('[class*="' + id + '"]:not(".' + id + '_' + parsedValue + '")').val('').trigger('change');
-        $('.' + id + '_' + parsedValue).parents('.control-group').show();
+        // $('[class*="' + id + '"]').parents('.form-group').hide();
+        // $('[class*="' + id + '"]:not(".' + id + '_' + parsedValue + '")').val('').trigger('change');
+        // $('.' + id + '_' + parsedValue).parents('.form-group').show();
       }
     });
 
Index: cnr.ui.sedi.js
===================================================================
--- cnr.ui.sedi.js	(revision 5716)
+++ cnr.ui.sedi.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'cnr/cnr.url', 'cnr/cnr.ui.select'], function ($, URL, Select) {
+define(['cnr/cnr.url', 'cnr/cnr.ui.select'], function (URL, Select) {
 
   "use strict";
 
Index: cnr.ui.select.js
===================================================================
--- cnr.ui.select.js	(revision 5716)
+++ cnr.ui.select.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'i18n', 'select2', 'select2-i18n', 'cnr/cnr'], function ($, i18n, CNR) {
+define(['i18n', 'select2', 'select2-i18n', 'cnr/cnr'], function (i18n, CNR) {
   "use strict";
 
   function init(item, id, parent, controls) {
Index: cnr.ui.tree.js
===================================================================
--- cnr.ui.tree.js	(revision 5716)
+++ cnr.ui.tree.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'cnr/cnr.tree', 'cnr/cnr.url'], function ($, Tree, URL) {
+define(['cnr/cnr.tree', 'cnr/cnr.url'], function (Tree, URL) {
   "use strict";
 
   return {
Index: cnr.ui.workflow.js
===================================================================
--- cnr.ui.workflow.js	(revision 5716)
+++ cnr.ui.workflow.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'i18n', 'cnr/cnr.url'], function ($, i18n, URL) {
+define(['i18n', 'cnr/cnr.url'], function (i18n, URL) {
   "use strict";
 
   // workflow definitions selector
Index: cnr.url.js
===================================================================
--- cnr.url.js	(revision 5716)
+++ cnr.url.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'cnr/cnr.ui', 'json!common', 'i18n', 'json!cache'], function ($, UI, common, i18n, cache) {
+define(['cnr/cnr.ui', 'json!common', 'i18n', 'json!cache'], function (UI, common, i18n, cache) {
   "use strict";
 
   var xhrs = {},
Index: cnr.validator.js
===================================================================
--- cnr.validator.js	(revision 5716)
+++ cnr.validator.js	(working copy)
@@ -1,4 +1,4 @@
-define(['jquery', 'bootstrap', 'i18n', 'validate', 'json!common'], function ($, bootstrap, i18n, jqvalidate, common) {
+define(['i18n', 'validate', 'json!common'], function (i18n, jqvalidate, common) {
 
   "use strict";
   var classes = {success: 'success', error: 'error'};
@@ -5,6 +5,7 @@
 
   function validate(target, settings) {
     $.validator.prototype.showLabel = function (element, message) {
+
       //var label = this.errorsFor( element );
       var el = $(element),
         valid = message === undefined || message.length === 0,
@@ -16,7 +17,7 @@
         .toggleClass(classes.error, !valid);
 
       if (!valid && el.is(":visible")) {
-        el
+        var x = el
           .closest('.control-group')
           .tooltip({
             animation: false,
@@ -25,8 +26,8 @@
             placement: "right",
             container: container.find('.controls')
           })
-          .tooltip('show')
-          .data('tooltip').$tip.addClass('relative');
+          .tooltip('show');
+        //x.data('tooltip').$tip.addClass('relative');
       }
     };
 
