<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<bean class="it.cnr.jconon.service.cache.ApplicationAttachmentChildService">
		<property name="jsonlistname" value="jsonlistApplicationPeopleAttachments"/>
		<property name="parentTypes">
			<list>
				<value>D:jconon_attachment:prodotto</value>
			</list>
		</property>
		<property name="aspect" value="P:cvpeople:commonSottoSezioneId"/>
	</bean>
	<bean name="peopleService" class="it.cnr.jconon.service.PeopleService"/>
	
	<!-- Begin CMIS service Bean -->
	<bean id="cmisPeopleConfig" class="it.cnr.cool.cmis.service.CMISConfig">
		<constructor-arg>
			<map>
				<entry key="org.apache.chemistry.opencmis.binding.atompub.url"
					value="${people.org.apache.chemistry.opencmis.binding.atompub.url}" />
				<entry key="org.apache.chemistry.opencmis.binding.spi.type"
					value="${org.apache.chemistry.opencmis.binding.spi.type}" />
				<entry key="org.apache.chemistry.opencmis.binding.connecttimeout"
					value="${org.apache.chemistry.opencmis.binding.connecttimeout}" />
				<entry key="org.apache.chemistry.opencmis.binding.readtimeout"
					value="${org.apache.chemistry.opencmis.binding.readtimeout}" />
				<entry key="org.apache.chemistry.opencmis.binding.httpinvoker.classname"
					value="${org.apache.chemistry.opencmis.binding.httpinvoker.classname}" />

				<entry key="user.guest.username" value="${people.user.guest.username}" />
				<entry key="user.guest.password" value="${people.user.guest.password}" />
				<entry key="user.admin.username" value="${people.user.admin.username}" />
				<entry key="user.admin.password" value="${people.user.admin.password}" />
			</map>
		</constructor-arg>
	</bean>


	<bean id="peopleQueryService" class="it.cnr.jconon.service.PeopleQueryService"></bean>
	
</beans>
