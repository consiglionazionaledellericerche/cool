<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<import resource="classpath*:META-INF/spring/cool-doccnr-context.xml" />



	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:META-INF/spring/*.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean id="cmisService" class="it.cnr.cool.cmis.service.CMISService">
		<property name="atompubURL" value="${org.apache.chemistry.opencmis.binding.atompub.url}" />
	</bean>
	
	<!-- Begin CMIS service Bean -->
	<bean id="cmisConfig" class="it.cnr.cool.cmis.service.CMISConfig">
		<constructor-arg>
			<map>
				<entry key="org.apache.chemistry.opencmis.binding.atompub.url"
					value="${org.apache.chemistry.opencmis.binding.atompub.url}" />
				<entry key="org.apache.chemistry.opencmis.binding.spi.type"
					value="${org.apache.chemistry.opencmis.binding.spi.type}" />
				<entry key="org.apache.chemistry.opencmis.binding.connecttimeout"
					value="${org.apache.chemistry.opencmis.binding.connecttimeout}" />
				<entry key="org.apache.chemistry.opencmis.binding.readtimeout"
					value="${org.apache.chemistry.opencmis.binding.readtimeout}" />
				<entry key="org.apache.chemistry.opencmis.binding.httpinvoker.classname"
					value="${org.apache.chemistry.opencmis.binding.httpinvoker.classname}" />
				<entry key="user.guest.username" value="${user.guest.username}" />
				<entry key="user.guest.password" value="${user.guest.password}" />
				<entry key="user.admin.username" value="${user.admin.username}" />
				<entry key="user.admin.password" value="${user.admin.password}" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="cmisDefaultOperationContext"
		class="org.apache.chemistry.opencmis.client.runtime.OperationContextImpl">
		<property name="maxItemsPerPage" value="10" />
		<property name="cacheEnabled" value="false" />
	</bean>
	
	<bean id="cmisAclOperationContext"
		class="org.apache.chemistry.opencmis.client.runtime.OperationContextImpl">
		<property name="cacheEnabled" value="true" />
		<property name="includeAcls" value="true" />
	</bean>

	<bean id="cmisFolderService" class="it.cnr.cool.cmis.service.impl.FolderServiceImpl">
		<property name="dataDictionaryPath" value="${dataDictionary.path}" />
	</bean>
	<bean id="cacheService" class="it.cnr.cool.cmis.service.impl.CacheServiceImpl">
	</bean>

	<bean class="java.util.ArrayList"></bean>


	<bean name="zipperServiceAsynchronous" class="it.cnr.doccnr.service.zipper.ZipperServiceAsynchronous"></bean>
	
	<bean name="copyService" class="it.cnr.doccnr.service.copy.CopyService"></bean>
	<bean name="moveService" class="it.cnr.doccnr.service.move.MoveService"></bean>

	<bean id="mailService" class="it.cnr.cool.mail.MailServiceImpl">
		<property name="mailFromDefault" value="${mail.from.default}" />
		<property name="mailToAdmin" value="${mail.admin}" />
		<property name="mailToProtocollo" value="${mail.protocollo}" />
		<property name="mailToHelpDesk" value="${mail.helpdesk}" />
		<property name="mailToErrorMessage" value="${mail.to.error.message}" />
		<property name="mailErrorEnabled" value="${mail.error.enabled}" />
	</bean>
	
		<!-- Mail service -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.from.default">${mail.from.default}</prop>
				<!-- Use SMTP-AUTH to authenticate to SMTP server -->
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<!-- Use TLS to encrypt communication with SMTP server -->
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
			</props>
		</property>
	</bean>
	
	<bean id="proxyInterceptor" class="it.cnr.cool.interceptor.ProxyInterceptor" />
	
	<bean class="it.cnr.cool.rest.Proxy">
		<property name="proxyInterceptor" ref="proxyInterceptor" />
	</bean>
	
	
</beans>
